@page "/Reservas"

@using System.Globalization
@rendermode InteractiveServer
@inject HabitacionesService habitacionesService
@inject ReservasService reservasService

<div class="container mt-4">
    <h2 class="text-center mb-4">Listado de Habitaciones Disponibles</h2>

    <!-- Filtro por fechas -->
    <div class="row mb-4">
        <div class="col-md-3">
            <label>Fecha de Inicio</label>
            <InputDate @bind-Value="reservas.FechaInicio" class="form-control"
                       min="@DateTime.Now.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3">
            <label>Fecha Final</label>
            <InputDate @bind-Value="reservas.FechaFinal" class="form-control"
                       min="@reservas.FechaInicio?.AddDays(1).ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3 align-self-end">
            <button class="btn btn-primary" @onclick="FiltrarHabitaciones">Filtrar Habitaciones</button>
        </div>
        <div class="col-md-3 align-self-end">
            <button class="btn btn-secondary" @onclick="Restablecer">Restablecer</button>
        </div>
    </div>

    <!-- Tabla para mostrar las habitaciones -->
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Número de Habitación</th>
                <th>Tipo de Habitación</th>
                <th>Descripción</th>
                <th>Capacidad</th>
                <th>Precio</th>
                <th>Ver más</th>
            </tr>
        </thead>
        <tbody>
            @if (ListaHabitaciones.Count == 0)
            {
                <tr>
                    <td colspan="7" class="text-center">No hay habitaciones disponibles.</td>
                </tr>
            }
            else
            {
                @foreach (var habitacion in ListaHabitaciones)
                {
                    <tr>
                        <td>@habitacion.HabitacionId</td>
                        <td>@habitacion.NumeroHabitacion</td>
                        <td>@habitacion.TipoHabitaciones?.Categoria</td>
                        <td>@habitacion.TipoHabitaciones?.Descripcion</td>
                        <td>@habitacion.Capacidad</td>
                        <td>@habitacion.PrecioBase.ToString("C", CultureInfo.CreateSpecificCulture("es-ES"))</td>
                        <td>
                            <a href="Reservas/Create/@habitacion.HabitacionId">
                                <button type="button" class="btn btn-success">Ver</button>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

<p>@Mensaje</p>

@code {
    public Reservas reservas { get; set; } = new Reservas();
    public List<Habitaciones> ListaHabitaciones { get; set; } = new List<Habitaciones>();
    public string Mensaje { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        // Carga inicial de todas las habitaciones con detalles
        ListaHabitaciones = await habitacionesService.ListarConDetalles();
    }

    private async Task FiltrarHabitaciones()
    {
        // Validar que ambas fechas estén seleccionadas
        if (reservas.FechaInicio.HasValue && reservas.FechaFinal.HasValue)
        {
            // Validar que la fecha de inicio no sea anterior a la fecha actual
            if (reservas.FechaInicio.Value.Date < DateTime.Now.Date)
            {
                Mensaje = "La fecha de inicio no puede ser anterior a la fecha actual.";
                return;
            }

            // Validar que la fecha final no sea menor que la fecha de inicio
            if (reservas.FechaFinal.Value.Date < reservas.FechaInicio.Value.Date)
            {
                Mensaje = "La fecha final no puede ser anterior a la fecha de inicio.";
                return;
            }

            // Filtrar habitaciones según la disponibilidad
            ListaHabitaciones = await habitacionesService.Listar(h =>
                !h.Reservas.Any(r =>
                    r.FechaInicio < reservas.FechaFinal.Value &&
                    r.FechaFinal > reservas.FechaInicio.Value));

            Mensaje = $"Habitaciones Disponibles: {ListaHabitaciones.Count}";
        }
        else
        {
            Mensaje = "Por favor, selecciona ambas fechas.";
        }
    }

    private async Task Restablecer()
    {
        // Restablecer la lista y limpiar filtros
        Mensaje = "Se cargaron todas las habitaciones.";
        ListaHabitaciones = await habitacionesService.ListarConDetalles();
        reservas.FechaInicio = null;
        reservas.FechaFinal = null;
    }
}

@page "/Reservas"
@using System.Globalization
@inject HabitacionesService habitacionesService
@inject NavigationManager navigationManager
<div class="container mt-4">
    <h2 class="text-center mb-4">Listado de Habitaciones Disponibles</h2>

    <!-- Filtro por fechas -->
    <div class="row mb-4">
        <div class="col-md-3">
            <label>Fecha de Inicio</label>
            <InputDate @bind-Value="FechaInicio" class="form-control" />
        </div>
        <div class="col-md-3">
            <label>Fecha Final</label>
            <InputDate @bind-Value="FechaFinal" class="form-control" />
        </div>
        @* <div class="col-md-3 align-self-end"> *@
        @*     <button class="btn btn-primary" @onclick="AplicarFiltro">Filtrar Habitaciones</button> *@
        @* </div> *@
        @* <div class="col-md-3 align-self-end"> *@
        @*     <button class="btn btn-secondary" @onclick="MostrarTodasHabitaciones">Restablecer</button> *@
        @* </div> *@
    </div>

    <!-- Tabla para mostrar las habitaciones -->
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>ID</th>
                <th>Numero de habitacion</th>
                <th>Tipo de Habitación</th>
                <th>Descripcion</th>
                <th>Capacidad</th>
                <th>Precio</th>
                <th>Ver mas</th>
            </tr>
        </thead>
        <tbody>
            @if (ListaHabitaciones.Count == 0)
            {
                <tr>
                    <td colspan="6" class="text-center">No hay habitaciones disponibles.</td>
                </tr>
            }
            else
            {
                @foreach (var habitacion in ListaHabitaciones)
                {
                    <tr>
                        <td>@habitacion.HabitacionId</td>
                        <td>@habitacion.NumeroHabitacion</td>
                        <td>@habitacion.TipoHabitaciones?.Categoria</td>
                        <td>@habitacion.TipoHabitaciones?.Descripcion</td>
                        <td>@habitacion.Capacidad</td>
                        <td>@habitacion.PrecioBase.ToString("C", CultureInfo.CreateSpecificCulture("es-ES"))</td>
                        <td>
                            <a href="Reservas/Create">
                                <button type="button" class="btn btn-success">Ver</button>
                            </a>
                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>
</div>

@code {

    public List<Habitaciones> ListaHabitaciones { get; set; } = new List<Habitaciones>();
    public DateTime? FechaInicio { get; set; }
    public DateTime? FechaFinal { get; set; }

    public Reservas ReservaTemporal { get; set; } = new Reservas();

    protected override async Task OnInitializedAsync()
    {
        ListaHabitaciones = await habitacionesService.ListarConDetalles();
    }

    // private async Task AplicarFiltro()
    // {
    //     if (FechaInicio.HasValue && FechaFinal.HasValue)
    //     {
    //         ListaHabitaciones = await habitacionesService.BuscarHabitacionDisponibles(FechaInicio.Value, FechaFinal.Value);
    //     }
    // }

    // private async Task MostrarTodasHabitaciones()
    // {
    //     ListaHabitaciones = await habitacionesService.ListarConDetalles();
    //     FechaInicio = null;
    //     FechaFinal = null;
    // }

    private void AlmacenarFechas()
    {
        if (FechaInicio.HasValue && FechaFinal.HasValue)
        {
            ReservaTemporal.FechaInicio = FechaInicio.Value;
            ReservaTemporal.FechaFinal = FechaFinal.Value;
        }
    }

    private void NavegarAConfirmacionReserva()
    {
        AlmacenarFechas();  // Asegúrate de almacenar las fechas antes de navegar
        navigationManager.NavigateTo("/Reservas/Create");  // Asegúrate de tener una ruta configurada
    }

}

@page "/Agregados/Edit/{AgregadoId:int}"
@using HotelSunset.Models
@using HotelSunset.Service
@inject AgregadosServices agregadoService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Editar Agregados</PageTitle>
<EditForm Model="agregados" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="shadow-lg">
            @*Header*@
            <div class="card-header">
                <div class="text-center">
                    <h3><strong>Editar Agregados</strong></h3>
                </div>
            </div>
            @*Body*@
            <div class="card-body">
                @*Descripcion*@
                <div class="col-1 mt-2">
                    <label class="form-label"><strong>Descripción</strong></label>
                    <InputText class="form-control" @bind-Value=agregados.Descripcion></InputText>
                    <ValidationMessage For="(() => agregados.Descripcion)"></ValidationMessage>
                </div>

                @*Precio*@
                <div class="col-1 mt-2">
                    <label class="form-label"><strong>Precio</strong></label>
                    <InputNumber class="form-control" @bind-Value=agregados.Precio></InputNumber>
                    <ValidationMessage For="(() => agregados.Precio)"></ValidationMessage>
                </div>

                @*Existencia*@
                <div class="col-1 mt-2">
                    <label class="form-label"><strong>Existencia</strong></label>
                    <InputNumber class="form-control" @bind-Value=agregados.Existencia></InputNumber>
                    <ValidationMessage For="(() => agregados.Existencia)"></ValidationMessage>
                </div>
            </div>

            @*Footer*@
            <div class="footer">
                <a href="GestionHotel/Agregados">
                    <button type="button" class="btn btn-secondary">Volver</button>
                </a>
                <button type="submit" class="btn btn-success">Guardar</button>
            </div>
            @Mensaje
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int AgregadoId { get; set; }
    public Agregados agregados { get; set; } = new Agregados();
    public List<Agregados> ListaAgregado { get; set; } = new List<Agregados>();
    public string Mensaje = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        agregados = await agregadoService.Buscar(AgregadoId);
    }

    public async Task<bool> Validar()
    {
        var existe = await agregadoService.ExisteAgregados(agregados.AgregadoId, agregados.Descripcion);
        return existe;
    }

    public async Task Guardar()
    {
        if (await Validar())
        {
            Mensaje = "Ya existe este agregado.";
        }

        var crear = await agregadoService.Guardar(agregados);

        if (crear)
        {
            Mensaje = "Se ha modificado correctamente.";
        }
        else
        {
            Mensaje = "No se pudo modificar.";
        }
    }
}
